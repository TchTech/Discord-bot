import {
  afterAll as _afterAll,
  beforeStart as _beforeStart,
  afterEach as _afterEach,
  beforeEach as _beforeEach,
} from "./hooks";
import {
  sendMessage as _sendMessage,
  getRole as _getRole,
  createRole as _createRole,
} from "./api-utilities";
/**
 * Corde's utility namespace to call it's API functions.
 * You can also import each function desconstructing in corde lib import
 */
export declare namespace corde {
  const afterAll: typeof _afterAll;
  const beforeStart: typeof _beforeStart;
  const afterEach: typeof _afterEach;
  const beforeEach: typeof _beforeEach;
  const expect: import("./types").IExpect;
  const group: <T extends unknown>(
    definitionResolvable: T,
    testDefinitions: import("./types").VoidLikeFunction,
  ) => void;
  const describe: <T extends unknown>(
    definitionResolvable: T,
    testDefinitions: import("./types").VoidLikeFunction,
  ) => void;
  const it: <T extends unknown>(
    expectationDescription: T,
    assertion: import("./types").VoidLikeFunction,
    timeout?: number | undefined,
  ) => void;
  const test: <T extends unknown>(
    expectationDescription: T,
    assertion: import("./types").VoidLikeFunction,
    timeout?: number | undefined,
  ) => void;
  const sendMessage: typeof _sendMessage;
  const getRole: typeof _getRole;
  const createRole: typeof _createRole;
}

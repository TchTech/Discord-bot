import { ColorResolvable, Role } from "discord.js";
import { IBaseRole } from "../types";
import { Colors, RolePermission } from "../utils";
/**
 * Encapsulation of [Discord.js Role](https://discord.js.org/#/docs/main/stable/class/Role).
 * @see https://discord.com/developers/docs/topics/permissions#role-object
 */
export declare class CordeRole {
  private _role;
  constructor(role: Role);
  /**
   * Integer representation of hexadecimal color code.
   */
  get color(): number;
  /**
   * Creation time of the role.
   */
  get createdAt(): Date;
  /**
   * Inform if this role was deleted.
   */
  get isDeleted(): boolean;
  /**
   * Inform if this role can be edited.
   */
  get isEditable(): boolean;
  /**
   * This role's color in hexadecimal.
   */
  get hexColor(): string;
  /**
   * If this role is pinned in the user listing
   */
  get isHoist(): boolean;
  /**
   * Id of this role.
   */
  get id(): string;
  /**
   * Whether this role is managed by an integration
   */
  get isManaged(): boolean;
  /**
   * Whether this role is mentionable
   */
  get isMentionable(): boolean;
  /**
   * Name of this role.
   */
  get name(): string;
  /**
   * Position of this role.
   *
   * @see https://discord.com/developers/docs/topics/permissions#permission-hierarchy
   */
  get position(): number;
  /**
   * Delete this role. Requires the `MANAGE_ROLES` permission.
   * Returns a `204` empty response on success.
   * Fires a [Guild Role Delete](https://discord.com/developers/docs/topics/gateway#guild-role-update) Gateway event
   *
   * @see https://discord.com/developers/docs/resources/guild#delete-guild-role
   */
  delete(): Promise<void>;
  /**
   * Updates this role's position.
   * Requires the `MANAGE_ROLES` permission.
   *
   * @param position new position for this role.
   */
  updatePosition(position: number): Promise<this>;
  /**
   * Updates this role's name.
   * Requires the `MANAGE_ROLES` permission.
   *
   * @param newName new value for this role's name
   */
  updateName(newName: string): Promise<this>;
  /**
   * Update this role mentionable property.
   * Requires the `MANAGE_ROLES` permission.
   *
   * @param mentionable New value for mentionable
   */
  updateMentionable(mentionable: boolean): Promise<this>;
  /**
   * Update this role hoist.
   * Defines if the role should be displayed separately in the sidebar.
   * Requires the `MANAGE_ROLES` permission.
   *
   * @param hoist New value for hoist
   */
  updateHoist(hoist: boolean): Promise<this>;
  /**
   * Update this role color.
   * Requires the `MANAGE_ROLES` permission.
   *
   * @param newColor New color.
   */
  updateColor(newColor: ColorResolvable | Colors): Promise<this>;
  /**
   * Update this role permission.
   * Requires the `MANAGE_ROLES` permission.
   *
   * @param permissions New permissions for this role, it can be an
   * empty array.
   */
  updatePermissions(...permissions: RolePermission[]): Promise<this>;
  /**
   * Modify a guild role. Requires the `MANAGE_ROLES` permission.
   * Returns the updated role on success.
   * Fires a Guild Role Update Gateway event.
   *
   * @param data Informations to be updated.
   * @see https://discord.com/developers/docs/resources/guild#delete-guild-role
   */
  update(data: IBaseRole): Promise<this>;
}

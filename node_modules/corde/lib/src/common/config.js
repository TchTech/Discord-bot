"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true,
});
exports.Config = void 0;

const consts_1 = require("../consts");

class Config {
  setConfigs(config, forceUpdate) {
    if (config.cordeBotToken && (!this.cordeBotToken || forceUpdate)) {
      this.cordeBotToken = config.cordeBotToken;
    }

    if (config.botPrefix && (!this.botPrefix || forceUpdate)) {
      this.botPrefix = config.botPrefix;
    }

    if (config.botTestId && (!this.botTestId || forceUpdate)) {
      this.botTestId = config.botTestId;
    }

    if (config.botToken && (!this.botToken || forceUpdate)) {
      this.botToken = config.botToken;
    }

    if (config.channelId && (!this.channelId || forceUpdate)) {
      this.channelId = config.channelId;
    }

    if (config.guildId && (!this.guildId || forceUpdate)) {
      this.guildId = config.guildId;
    }

    if (!this.timeOut || forceUpdate) {
      if (config.timeOut) {
        this.timeOut = config.timeOut;
      } else {
        this.timeOut = consts_1.DEFAULT_TEST_TIMEOUT;
      }
    }

    if (config.botPrefix && (!this.botPrefix || forceUpdate)) {
      this.botPrefix = config.botPrefix;
    }

    if (config.modulePathIgnorePatterns && (!this.modulePathIgnorePatterns || forceUpdate)) {
      this.modulePathIgnorePatterns = config.modulePathIgnorePatterns;
    }

    if (config.testMatches && (!this.testMatches || this.testMatches.length === 0 || forceUpdate)) {
      this.testMatches = config.testMatches;
    }
  }
}

exports.Config = Config;
